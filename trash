    for (const key of keys) {
      // has has eq eq
      if (isBothObjectHaveProperty(file1, file2, key)) {
        if (isValuesAreEqual(file1, file2, key)) {
          output.push(`${' '.repeat(depth)}  ${key}: ${file1[key]}\n`);
        } else if (
          !isValuesAreEqual(file1, file2, key) &&
          !isObject(file1[key]) &&
          !isObject(file2[key])
        ) {
          // if not obj and if obj
          output.push(`${' '.repeat(depth)}- ${key}: ${file1[key]}\n`);
          output.push(`${' '.repeat(depth)}+ ${key}: ${file2[key]}\n`);
        } else if (
          !isValuesAreEqual(file1, file2, key) &&
          isObject(file1[key]) &&
          !isObject(file2[key])
        ) {
          // if not obj and if obj
          output.push(`${' '.repeat(depth)}${key}: \n${inner(file1[key], {}, depth = depth + 2)}`);
          depth -= 2
          output.push(`${' '.repeat(depth)}+ ${key}: ${file2[key]}\n`);
        } else if (
          !isValuesAreEqual(file1, file2, key) &&
          isObject(file1[key]) &&
          isObject(file2[key])
        ) {
          // if not obj and if obj
          depth += 4
          output.push(`${' '.repeat(depth - 2)}${key}: {\n${inner(file1[key], file2[key], depth = depth )}${' '.repeat(depth - 2)}}\n`);
          depth -= 4
        } else if (
          !isValuesAreEqual(file1, file2, key) &&
          !isObject(file1[key]) &&
          isObject(file2[key])
      )  {
        // if not obj and if obj
        output.push(`${' '.repeat(depth)}- ${key}: ${file1[key]}\n`);
        output.push(`${' '.repeat(depth)}${key}: {\n${inner({}, file2[key],  depth += 2)}}`);
      } }
      else if (HasProperty(file1, key) && !HasProperty(file2, key)) {
        output.push(`${' '.repeat(depth)}- ${key}: ${file1[key]}\n`);
      } else if (!HasProperty(file1, key) && HasProperty(file2, key)) {
        output.push(`${' '.repeat(depth)}+ ${key}: ${file2[key]}\n`);
      }
    }
    
    return output;
  };